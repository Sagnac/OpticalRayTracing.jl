var documenterSearchIndex = {"docs":
[{"location":"Plotting Examples/#Plotting-examples","page":"Plotting examples","title":"Plotting examples","text":"","category":"section"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"This package defines several plot recipes for Makie.","category":"page"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"Supported keyword arguments are:","category":"page"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"theme (using Makie's theme customizability);\nray_colors (a two-tuple of the marginal & chief ray colors);\nsurface_color (for the optical element surfaces & image plane);\nanything Makie's lines accepts.","category":"page"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"Using the mutating rayplot! version will draw on top of the current figure.","category":"page"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"using GLMakie\n\ntheme = theme_black()\nsurface_color = :white\nray_colors = (:cyan, :red)\n\nrayplot(surfaces, a, system; theme, surface_color, ray_colors)\n\nrays = raytrace(system, -24.0, -1.5 * system.f)\nfig = rayplot(rays)\nrays = raytrace(system, 24.0, -1.5 * system.f)\nrayplot!(rays)","category":"page"},{"location":"Plotting Examples/","page":"Plotting examples","title":"Plotting examples","text":"(Image: rayplot) (Image: rays)","category":"page"},{"location":"Vignetting Analysis/#Vignetting-analysis","page":"Vignetting analysis","title":"Vignetting analysis","text":"","category":"section"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"Given a system or ray bundle and a set of apertures this package provides a basic tool for evaluating vignetting criteria at each aperture. Along with identifying, by index, which apertures cause partial or full vignetting, the returned 5 column semi-diameter matrix contains:","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"The provided aperture size;\nThe marginal ray limit: the size at which the aperture becomes the stop due to limiting the on-axis ray bundle;\nThe size necessary for no vignetting to occur;\nThe size at which the half-vignetting condition is satisified;\nThe size at which the aperture clips the entire off-axis ray bundle; this is the minimum aperture size at which the given field of view is still supported down to approximately zero irradiance.","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"In addition, the maximum system field of view for both the half-vignetted and fully-vignetted cases is determined for the input aperture sizes.","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"By passing the exported FOV type the second method allows directly extracting the maximum supported paraxial principal ray slopes and the corresponding image heights for all three vignetting conditions.","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"In essence, the matrix represents the supported aperture sizes given the system field of view and the returned vectors from the second method correspond to the maximal fields for the given aperture sizes.","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"Any NaNs in the matrix signify that there is no possible size which fits the criteria due to the aforementioned limiting factor.","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"vignetting(system, a)","category":"page"},{"location":"Vignetting Analysis/","page":"Vignetting analysis","title":"Vignetting analysis","text":"vignetting(system, a, FOV)","category":"page"},{"location":"#OpticalRayTracing.jl","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"","category":"section"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"First order paraxial ray tracing, optical system solving, and aberration analysis.","category":"page"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"","category":"page"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"This package is meant to be an initial design prototyping tool.","category":"page"},{"location":"#Installation","page":"OpticalRayTracing.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"using Pkg\nPkg.add(url = \"https://github.com/Sagnac/OpticalRayTracing.jl\")","category":"page"},{"location":"#Sample-usage","page":"OpticalRayTracing.jl","title":"Sample usage","text":"","category":"section"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"using OpticalRayTracing\n\n# Tessar lens, units in mm; prescription from Hecht's Optics\nsurfaces = [\n    # R        t        n\n    Inf        0.0      1.0;\n      16.28    3.57     1.6116;\n    -275.7     1.89     1.0;\n     -34.57    0.81     1.6053;\n      15.82    2.345    1.0;\n    Inf        0.905    1.0;\n    Inf        2.17     1.5123;\n      19.2     3.96     1.6116;\n     -24.0     0.0      1.0\n]\n\n# Clear aperture semi-diameters\na = [10.25, 10.25, 9.0, 9.0, 7.63, 9.0, 9.0, 9.0]\n\n# image height\nh′ = -21.5\n\nsystem = solve(surfaces, a, h′)","category":"page"},{"location":"","page":"OpticalRayTracing.jl","title":"OpticalRayTracing.jl","text":"system.M # vertex matrix","category":"page"},{"location":"Ray Tracing/#General-ray-tracing","page":"General ray tracing","title":"General ray tracing","text":"","category":"section"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"The raytrace function provides methods for tracing over a given system or lens while the transfer function provides convenience methods for working with transfer matrices.","category":"page"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"Lenses can be computed either by passing a surface matrix, as in Lens(surfaces), or directly by using the Lens(lens_matrix, refractive_indices) constructor.","category":"page"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"# telephoto objective comprised of two thin lenses in air\nlens = Lens([\n    # t/n   # power\n    0.0      0.02;\n    25.0    -0.02\n], ones(3))\n\ny, nu = 1.0, 0.0\n\nraytrace(lens, y, nu)","category":"page"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"# object height\nh = 10.0\n# object distance from vertex\ns = -100.0\n\nraytrace(system, h, s)","category":"page"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"# distance from back vertex\ns′ = 100.0\n\ntransfer(system.M, [y, nu], s, s′)","category":"page"},{"location":"Ray Tracing/","page":"General ray tracing","title":"General ray tracing","text":"In addition, general transfer matrices can be directly constructed by passing a Lens to the TransferMatrix constructor.","category":"page"},{"location":"Seidel Aberrations/#Seidel-aberrations","page":"Seidel aberrations","title":"Seidel aberrations","text":"","category":"section"},{"location":"Seidel Aberrations/","page":"Seidel aberrations","title":"Seidel aberrations","text":"The surface coefficients can be extracted by querying the relevant WIJK fields. In addition, chromatic aberration can be quantified for a given δn dispersion vector. The results are optical path differences in waves at the d spectral line for a system in mm; the wavelength parameter can also be tuned.","category":"page"},{"location":"Seidel Aberrations/","page":"Seidel aberrations","title":"Seidel aberrations","text":"aberrations(surfaces, system)","category":"page"},{"location":"Seidel Aberrations/","page":"Seidel aberrations","title":"Seidel aberrations","text":"The return value holds the relevant metadata in an Aberration structure. The named fields (spherical, etc.) are the sum totals. petzval, tangential, & sagittal refer to the respective field curvatures, while the W020 and W111 coefficient vectors refer to defocus & tilt from axial & lateral color, respectively.","category":"page"}]
}
